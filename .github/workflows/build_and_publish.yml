name: Publish Python üêç distributions üì¶

on:
  push:
    branches: [ 'main' ]
    tags:
      - 'v*'

jobs:
  migrate:
    name: Pull new version and make migration
    runs-on: ubuntu-latest
    environment:
      name: Pre-release
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=test,enable=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
                  APP_VERSION=${{ github.ref_name }}
          run: docker-compose up

      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python3 -m ensurepip 
          pip install alembic sqlalchemy psycopg2

      - name: Migrate DB
        run: |
          python3 -m alembic upgrade head

  build-and-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    needs: migrate
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: Release
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m ensurepip 
          pip install build --user 
          python -m build --wheel --sdist --outdir dist/
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
